React Components are the building blocks of React application.
by default, React application creates a root component called App.
A component is a small, reusable piece of code that represents a UI element. components are flexible, modular and reusable
React Provides two kinds of components
 i. functional components:
    what is a functional component?
       functional component also called stateless component that are simple components which receives props and returns JSX.
    How to create our own functional components?
       create a file functional-component-name.jsx and add a function which return an UI and export the function
       const Header = () =>
       {
        return (
        <h2>My Website</h2>
        )
       } 
       export default Header
       It is recommanded to have same name for component similar to file name. 
    Inside SRC, create a file with properNAME(starts with uppercase letter), you can keep all pcomponents in one single application
    How to use functional components?
      import functional components into other components and use them as HTML elements
    nested components:
       A component inside another component is called nested component
          //App.jsx
          <Header />
     
     props: props are used to send the values from parent components to child component. props is shortform of "properties"
     we send properties as attributes and receives the properties as parameters of function
     eg:
       //App.jsx
       <Header name="PRASAD" />
       //Header.jsx
       function Header(props){
         return (
            <h2>{props.name}</p>
         )

       }

       props is always an object of properties

       state:  In React state refers to the data that changes within a component. state is an object that stores the components dynamic data.

        state is necessary because react components are designed for reusability and dynamic , when a component data changes, react will re render component to reflext the new data. state is used to keep track of the data and re render the component

        How to use state in functional components?
          functional components are called stateless components because they cannot implement state directly so they use a hook called useState
          import {useState} from 'react

          const [value,setValue]= useState(initialvalue)
          value -- data which is printing on screen
          setValue -- is a method to update state and re render the component
          initialvalue contains default value
          useState is a hook(function) provided by react

           eg: import react,{useState} from 'react'
           function Counter(){
            const [count,setCount]= useState(0);
            return(
               <div>
               <p>Count:{count}</p>
               <button onClick={()=>setCount(count+1)}>increment</button>
               </div>
            )
           }
          export default Counter;

 ii. class components: class components are the stateful components and they use render method to render the UI and for render method they use Component and extends It.



 